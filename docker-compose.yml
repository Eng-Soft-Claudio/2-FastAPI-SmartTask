# docker-compose.yml
version: '3.8'

# Definição dos serviços que compõem a aplicação
services:

  # --- Serviço Redis ---
  redis:
    image: redis:7.0.11-alpine
    container_name: smarttask-redis
    ports: ["6379:6379"]
    restart: unless-stopped
    volumes: [redis_data:/data]
    networks: [smarttask-net]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3

   # --- Serviço MongoDB (local) ---
  mongodb:
    image: mongo:6.0.12
    container_name: smarttask-mongodb
    ports: ["27018:27017"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes: [mongodb_data:/data/db]
    networks: [smarttask-net]
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ping:1})' --username admin --password example --authenticationDatabase admin"]
      interval: 30s
      retries: 3

  # --- Serviço da API FastAPI ---
  api:
    container_name: smarttask-api
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    ports: ["8000:8000"]
    env_file: [.env.docker]
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks: [smarttask-net]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health"]
      interval: 30s
      retries: 3

  # --- Serviço do Worker ARQ ---
  worker:
    container_name: smarttask-worker
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    env_file: [.env.docker]
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks: [smarttask-net]
    command: arq worker.WorkerSettings
  
  # --- Serviço de Testes ---
  test:
    container_name: smarttask-test
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    env_file: [.env.test.docker]
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks: [smarttask-net]
    command: pytest --maxfail=5 --disable-warnings --cov=app --cov-report=term-missing
  
  # --- Serviço do Mailhog
  mailhog:
    image: mailhog/mailhog
    container_name: smarttask-mailhog
    ports:
      - "1025:1025" # Porta SMTP para a aplicação enviar e-mails
      - "8025:8025" # Interface Web do MailHog
    networks:
      - smarttask-net
    restart: unless-stopped

# --- Definição de Redes ---
networks:
  smarttask-net:                 
    driver: bridge                

# --- Definição de Volumes ---
volumes:
  redis_data:
  mongodb_data:
